- name: Install Neovim â€” set local vars
  ansible.builtin.set_fact:
    nvim_version: "v0.11.3"
    nvim_arch: "{{ (ansible_architecture == 'aarch64') | ternary('linux-arm64','linux-x86_64') }}"
    nvim_root: "/opt"
    nvim_dir: "/opt/nvim-0.11.3"
    nvim_symlink: "/usr/local/bin/nvim"
    nvim_tar: "/tmp/nvim-{{ (ansible_architecture == 'aarch64') | ternary('linux-arm64','linux-x86_64') }}.tar.gz"

- name: Ensure deps for tar/unzip
  ansible.builtin.apt:
    name:
      - tar
      - gzip
      - ca-certificates
      - curl
    state: present
    update_cache: yes

- name: Download Neovim {{ nvim_version }} tarball
  ansible.builtin.get_url:
    url: "https://github.com/neovim/neovim/releases/download/{{ nvim_version }}/nvim-{{ nvim_arch }}.tar.gz"
    dest: "{{ nvim_tar }}"
    mode: "0644"

- name: Remove previous versioned dir if present
  ansible.builtin.file:
    path: "{{ nvim_dir }}"
    state: absent

- name: Extract Neovim to {{ nvim_root }}
  ansible.builtin.unarchive:
    src: "{{ nvim_tar }}"
    dest: "{{ nvim_root }}"
    remote_src: yes

- name: Rename extracted folder to versioned dir
  ansible.builtin.command:
    cmd: "mv {{ nvim_root }}/nvim-{{ nvim_arch }} {{ nvim_dir }}"
  args:
    creates: "{{ nvim_dir }}"

- name: Symlink nvim into PATH
  ansible.builtin.file:
    src: "{{ nvim_dir }}/bin/nvim"
    dest: "{{ nvim_symlink }}"
    state: link
    force: yes

- name: Stable /opt/nvim -> {{ nvim_dir }} symlink
  ansible.builtin.file:
    src: "{{ nvim_dir }}"
    dest: "{{ nvim_root }}/nvim"
    state: link
    force: yes
